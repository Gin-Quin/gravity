# This workflow will do a clean install of node dependencies, build the source code and run tests
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Version and Release

on:
  workflow_dispatch:
    inputs:
      newversion:
        description: 'Semantic Version Bump Type (major minor patch)'
        required: true

env:
  node_version: 16

jobs:
  version_and_release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.2
      with:
        # fetch full history so things like auto-changelog work properly
        fetch-depth: 0
    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v2.1.1
      with:
        node-version: ${{ env.node_version }}
        # setting a registry enables the NODE_AUTH_TOKEN env variable where we can set an npm token.  REQUIRED
        registry-url: 'https://registry.npmjs.org'
    - run: npm i --prefix core/package
    - name: Version and publish to npm
      uses: bcomnes/npm-bump@v2.0.2
      with:
        publish_cmd: npm publish --prefix core/package
        git_email: bcomnes@gmail.com
        git_username: ${{ github.actor }}
        newversion: ${{ github.event.inputs.newversion }}
        push_version_commit: true # if your prePublishOnly step pushes git commits, you can omit this input or set it to false.
        github_token: ${{ secrets.GITHUB_TOKEN }} # built in actions token.  Passed tp gh-release if in use.
        npm_token: ${{ secrets.NPM_TOKEN }} # user set secret token generated at npm



# name: NPM publish CI workflow

# # trigger build when pushing, or when creating a pull request
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   init:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/cache@v2
#         id: pnpm-cache
#         with:
#           path: ~/.pnpm-store
#           key: ${{ runner.os }}-modules-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
#       - name: Install Dependencies
#         uses: pnpm/action-setup@v2.0.1
#         with:
#           version: 6.30.1
#           run_install: true

#   # test:
#   #   runs-on: ubuntu-latest
#   #   needs: init
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #     - uses: actions/cache@v2
#   #       id: pnpm-cache
#   #       with:
#   #         path: ~/.pnpm-store
#   #         key: ${{ runner.os }}-modules-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
#   #     - uses: pnpm/action-setup@v2.0.1
#   #       with:
#   #         version: 6.2.1
#   #         run_install: true
#   #     - name: Test
#   #       run: pnpm test

#   build:
#     runs-on: ubuntu-latest
#     needs: init
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/cache@v2
#         id: pnpm-cache
#         with:
#           path: ~/.pnpm-store
#           key: ${{ runner.os }}-modules-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
#       - uses: pnpm/action-setup@v2.0.1
#         with:
#           version: 6.2.1
#           run_install: true
#       - name: Build
#         run: pnpm build

#   publish:
#     if: github.event_name == 'push'
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/cache@v2
#         id: pnpm-cache
#         with:
#           path: ~/.pnpm-store
#           key: ${{ runner.os }}-modules-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
#       - uses: pnpm/action-setup@v2.0.1
#         with:
#           version: 6.2.1
#           run_install: true
#       - name: Publish
#         if: github.ref == 'refs/heads/main'
#         run: pnpm publish
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
